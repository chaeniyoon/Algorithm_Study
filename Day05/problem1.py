# 실전문제2 - 1로 만들기

"""
1. 5로 나누어떨어지면 --> 5로 나눔
2. 3으로 나누어떨어지면 --> 3으로 나눔
3. 2로 나누어떨어지면 --> 2로 나눔
4. x에서 1을 뺀다
"""

N = int(input())  # 연산하고자 하는 값

count = 0

while N !=1:  # N이 1이 될 때까지 반복
    if N % 5 == 0:  # 5로 나누어떨어지면,
        N = N // 5  # N은 5로 나눈 몫으로

    elif N % 3 == 0:  # 3로 나누어떨어지면,
        N = N // 3  # N은 3로 나눈 몫으로

    elif N % 2 == 0: # 2로 나누어떨어지면,
        N = N // 2  # N은 2로 나눈 몫으로

    else:  # 떨어지지 않는 경우, 
        N = N-1  # 1 빼기

    count += 1

print(count)

# ver2.
"""
1. 다이나믹 프로그래밍 진행(보텀업) --> 교재 답안 참고
2. min(d[i], d[i//2] + 1) --> 현재까지의 연산 횟수와 비교하여 더 작은 값으로 갱신하는 과정
"""

N = int(input())

d = [0] * 30001 # 정수는 최대 30000

# 다이나믹 프로그래밍 핵심 code!
for i in range(2, N+1):

    # 현재의 수에서 1을 빼는 경우,
    d[i] = d[i-1] +1

    if i%2 == 0: # 2로 나누어 떨어지면,
        d[i] = min(d[i], d[i//2] + 1) # 이 코드를 통해, 더 적은 연산 횟수를 가져가게 됨
    if i%3 == 0: # 3으로 나누어 떨어지면,
        d[i] = min(d[i], d[i//3] + 1)
    if i%5 == 0: # 5로 나누어 떨어지면,
        d[i] = min(d[i], d[i//5] + 1)  

print(d[N])              